export const methodError = {
    DELETE : { caption: "Error while trying delete object", description: (objName, url, message) => `${objName}${url}\r\n${message}` },
    PUT    : { caption: "Error while trying edit object"  , description: (objName, url, message) => `${objName}${url}\r\n${message}` },
    POST   : { caption: "Error while trying create object", description: (objName, url, message) => `${objName}${url}\r\n${message}` },
    GET    : { caption: "Error while trying get object"   , description: (objName, url, message) => `${objName}${url}\r\n${message}` }
}

export const httpErrors = {
    '400' : { header: 'Bad Request'                    , description: 'The server cannot or will not process the request due to an apparent client error'}, 
    '401' : { header: 'Unauthorized'                   , description: 'The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource.'}, 
    '403' : { header: 'Forbidden'                      , description: 'The request contained valid data and was understood by the server, but the server is refusing action. This may be due to the user not having the necessary permissions for a resource or needing an account of some sort, or attempting a prohibited action.'},
    '404' : { header: 'Not Found'                      , description: 'The requested resource could not be found but may be available in the future. Subsequent requests by the client are permissible.'},
    '405' : { header: 'Method Not Allowed'             , description: 'A request method is not supported for the requested resource'},
    '406' : { header: 'Not Acceptable'                 , description: 'The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request'},
    '407' : { header: 'Proxy Authentication Required'  , description: 'The client must first authenticate itself with the proxy'},
    '408' : { header: 'Request Timeout'                , description: 'The server timed out waiting for the request'},
    '409' : { header: 'Conflict'                       , description: 'Indicates that the request could not be processed because of conflict in the current state of the resource, such as an edit conflict between multiple simultaneous updates'},
    '410' : { header: 'Gone'                           , description: 'Resource requested is no longer available and will not be available again'},
    '411' : { header: 'Length Required'                , description: 'The request did not specify the length of its content, which is required by the requested resource'},
    '412' : { header: 'Precondition Failed'            , description: 'The server does not meet one of the preconditions that the requester put on the request header fields'},
    '414' : { header: 'URI Too Long'                   , description: 'The URI provided was too long for the server to process'},
    '415' : { header: 'Unsupported Media Type'         , description: 'The request entity has a media type which the server or resource does not support'},
    '416' : { header: 'Range Not Satisfiable'          , description: 'The client has asked for a portion of the file (byte serving), but the server cannot supply that portion'},
    '417' : { header: 'Expectation Failed'             , description: 'The server cannot meet the requirements of the Expect request-header field'},
    '419' : { header: 'Authentication Timeout'         , description: ''},
    '421' : { header: 'Misdirected Request'            , description: 'The request was directed at a server that is not able to produce a response'},
    '422' : { header: 'Unprocessable Entity'           , description: 'The request was well-formed but was unable to be followed due to semantic errors'},
    '423' : { header: 'Locked'                         , description: 'The resource that is being accessed is locked'},
    '424' : { header: 'Failed Dependency'              , description: 'The request failed because it depended on another request and that request failed'},
    '426' : { header: 'Upgrade Required'               , description: 'The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field'},
    '428' : { header: 'Precondition Required'          , description: 'The origin server requires the request to be conditional'},
    '429' : { header: 'Too Many Requests'              , description: 'The user has sent too many requests in a given amount of time'},
    '431' : { header: 'Request Header Fields Too Large', description: 'The server is unwilling to process the request because either an individual header field, or all the header fields collectively, are too large'},
    '449' : { header: 'Retry With'                     , description: ''},
    '451' : { header: 'Unavailable For Legal Reasons'  , description: 'A server operator has received a legal demand to deny access to a resource or to a set of resources that includes the requested resource'},
    '452' : { header: 'Bad sended request'             , description: ''},
    '499' : { header: 'Client Closed Request'          , description: 'Client has closed the request before the server could send a response'},

    '500' : { header: 'Internal Server Error'          , description: 'A generic error message, given when an unexpected condition was encountered and no more specific message is suitable'},
    '501' : { header: 'Not Implemented'                , description: 'The server either does not recognize the request method, or it lacks the ability to fulfil the request'},
    '502' : { header: 'Bad Gateway'                    , description: 'The server was acting as a gateway or proxy and received an invalid response from the upstream server'},
    '503' : { header: 'Service Unavailable'            , description: 'The server cannot handle the request (because it is overloaded or down for maintenance)'},
    '504' : { header: 'Gateway Timeout'                , description: 'The server was acting as a gateway or proxy and did not receive a timely response from the upstream server'},
    '505' : { header: 'HTTP Version Not Supported'     , description: 'The server does not support the HTTP protocol version used in the request'},
    '506' : { header: 'Variant Also Negotiates'        , description: 'Transparent content negotiation for the request results in a circular reference'},
    '507' : { header: 'Insufficient Storage'           , description: 'The server is unable to store the representation needed to complete the request'},
    '508' : { header: 'Loop Detected'                  , description: 'The server detected an infinite loop while processing the request'},
    '509' : { header: 'Bandwidth Limit Exceeded'       , description: ''},
    '510' : { header: 'Not Extended'                   , description: 'Further extensions to the request are required for the server to fulfil it'},
    '511' : { header: 'Network Authentication Required', description: 'The client needs to authenticate to gain network access. Intended for use by intercepting proxies used to control access to the network'},
    '520' : { header: 'Unknown Error'                  , description: 'The origin server returned an empty, unknown, or unexplained response'},
    '521' : { header: 'Web Server Is Down'             , description: 'The origin server has refused the connection'},
    '522' : { header: 'Connection Timed Out'           , description: 'Could not negotiate a TCP handshake with the origin server'},
    '523' : { header: 'Origin Is Unreachable'          , description: 'Could not reach the origin server'},
    '524' : { header: 'A Timeout Occurred'             , description: 'Was able to complete a TCP connection to the origin server, but did not receive a timely HTTP response'},
    '525' : { header: 'SSL Handshake Failed'           , description: 'Could not negotiate a SSL/TLS handshake with the origin server'},
    '526' : { header: 'Invalid SSL Certificate'        , description: 'Could not validate the SSL certificate on the origin web server'},
    }